# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ml_metadata.proto import metadata_store_service_pb2 as ml__metadata_dot_proto_dot_metadata__store__service__pb2


class MetadataStoreServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PutArtifacts = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/PutArtifacts',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutArtifactsRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutArtifactsResponse.FromString,
        )
    self.PutArtifactType = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/PutArtifactType',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutArtifactTypeRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutArtifactTypeResponse.FromString,
        )
    self.PutExecutions = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/PutExecutions',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutExecutionsRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutExecutionsResponse.FromString,
        )
    self.PutExecutionType = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/PutExecutionType',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutExecutionTypeRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutExecutionTypeResponse.FromString,
        )
    self.PutEvents = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/PutEvents',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutEventsRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutEventsResponse.FromString,
        )
    self.GetArtifactType = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetArtifactType',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactTypeRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactTypeResponse.FromString,
        )
    self.GetArtifactTypesByID = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetArtifactTypesByID',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactTypesByIDRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactTypesByIDResponse.FromString,
        )
    self.GetExecutionType = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetExecutionType',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionTypeRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionTypeResponse.FromString,
        )
    self.GetExecutionTypesByID = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetExecutionTypesByID',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionTypesByIDRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionTypesByIDResponse.FromString,
        )
    self.GetArtifacts = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetArtifacts',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsResponse.FromString,
        )
    self.GetExecutions = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetExecutions',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsResponse.FromString,
        )
    self.GetArtifactsByID = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetArtifactsByID',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByIDRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByIDResponse.FromString,
        )
    self.GetExecutionsByID = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetExecutionsByID',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsByIDRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsByIDResponse.FromString,
        )
    self.GetArtifactsByType = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetArtifactsByType',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByTypeRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByTypeResponse.FromString,
        )
    self.GetExecutionsByType = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetExecutionsByType',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsByTypeRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsByTypeResponse.FromString,
        )
    self.GetArtifactsByURI = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetArtifactsByURI',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByURIRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByURIResponse.FromString,
        )
    self.GetEventsByExecutionIDs = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetEventsByExecutionIDs',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetEventsByExecutionIDsRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetEventsByExecutionIDsResponse.FromString,
        )
    self.GetEventsByArtifactIDs = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetEventsByArtifactIDs',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetEventsByArtifactIDsRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetEventsByArtifactIDsResponse.FromString,
        )
    self.GetAll = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/GetAll',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetAllRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetAllResponse.FromString,
        )
    self.Get = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/Get',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetResponse.FromString,
        )
    self.MakeArtifactLive = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/MakeArtifactLive',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.MakeArtifactLiveRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.MakeArtifactLiveResponse.FromString,
        )
    self.CompleteExecution = channel.unary_unary(
        '/ml_metadata.MetadataStoreService/CompleteExecution',
        request_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.CompleteExecutionRequest.SerializeToString,
        response_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.CompleteExecutionResponse.FromString,
        )


class MetadataStoreServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PutArtifacts(self, request, context):
    """Inserts or updates artifacts in the database.

    If an artifact_id is specified for an artifact, it is an update.
    If an artifact_id is unspecified, it will insert a new artifact.
    For new artifacts, type must be specified.
    For old artifacts, type must be unchanged or unspecified.

    Args:
    artifacts: A list of artifacts to insert or update.

    Returns:
    A list of artifact ids index-aligned with the input.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PutArtifactType(self, request, context):
    """Inserts or updates an artifact type.

    If no artifact type exists in the database with the given name, it creates
    a new artifact type (and a database).

    If an artifact type with the same name already exists (let's call it
    old_artifact_type), then the impact depends upon the other options.

    If artifact_type == old_artifact_type, then nothing happens.

    Otherwise, if there is a field where artifact_type and old_artifact_type
    have different types, then it fails.

    Otherwise, if can_add_fields is False and artifact_type has a field
    old_artifact_type is missing, then it fails.

    Otherwise, if all_fields_match is True and old_artifact_type has a field
    artifact_type is missing, then it fails.

    Otherwise, if can_delete_fields is True and old_artifact_type has a field
    artifact_type is missing, then it deletes that field.

    Otherwise, it does nothing.
    Args:
    artifact_type: the type to add or update.

    Returns error if a constraint is violated.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PutExecutions(self, request, context):
    """Inserts or updates executions in the database.

    If an execution_id is specified for an execution, it is an update.
    If an execution_id is unspecified, it will insert a new execution.
    For new executions, type must be specified.
    For old executions, type must be unchanged or unspecified.

    Args:
    executions: A list of executions to insert or update.

    Returns:
    A list of execution ids index-aligned with the input.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PutExecutionType(self, request, context):
    """Inserts or updates an execution type.

    If no execution type exists in the database with the given name, it
    creates a new execution type (and a database).

    If an execution type with the same name already exists (let's call it
    old_execution_type), then the impact depends upon the other options.

    If execution_type == old_execution_type, then nothing happens.

    Otherwise, if there is a field where execution_type and old_execution_type
    have different types, then it fails.

    Otherwise, if can_add_fields is False and execution_type has a field
    old_execution_type is missing, then it fails.

    Otherwise, if all_fields_match is True and old_execution_type has a field
    execution_type is missing, then it fails.

    Otherwise, if can_delete_fields is True and old_execution_type has a field
    execution_type is missing, then it deletes that field.

    Otherwise, it does nothing.
    Args:
    execution_type: the type to add or update.
    can_add_fields: if true, you can add fields with this operation. If
    false, then if there are more fields in execution_type than in the
    database,
    the call fails.
    can_delete_fields: if true, you can remove fields with this operation.
    If false, then if there are more fields.

    Returns error if a constraint is violated.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PutEvents(self, request, context):
    """Inserts events in the database.

    The execution_id and artifact_id must already exist.
    Once created, events cannot be modified.

    Args:
    events: A list of events to insert or update.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetArtifactType(self, request, context):
    """Gets an artifact type. Returns a NOT_FOUND error if the type does not
    exist.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetArtifactTypesByID(self, request, context):
    """Gets a list of artifact types by ID.
    If no artifact types with an ID exists, the artifact type is skipped.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetExecutionType(self, request, context):
    """Gets an execution type, or None if it does not exist.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetExecutionTypesByID(self, request, context):
    """Gets a list of execution types by ID.
    If no execution types with an ID exists, the execution type is skipped.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetArtifacts(self, request, context):
    """Gets all the artifacts.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetExecutions(self, request, context):
    """Gets all the executions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetArtifactsByID(self, request, context):
    """Gets all artifacts with matching ids.

    The result is not index-aligned: if an id is not found, it is not
    returned.

    Args:
    artifact_ids: A list of artifact ids to retrieve.

    Returns:
    Artifacts with matching ids.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetExecutionsByID(self, request, context):
    """Gets all executions with matching ids.

    The result is not index-aligned: if an id is not found, it is not
    returned.

    Args:
    execution_ids: A list of execution ids to retrieve.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetArtifactsByType(self, request, context):
    """Gets all the artifacts of a given type.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetExecutionsByType(self, request, context):
    """Gets all the executions of a given type.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetArtifactsByURI(self, request, context):
    """Gets all the artifacts of a given uri.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEventsByExecutionIDs(self, request, context):
    """Gets all events with matching execution ids.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEventsByArtifactIDs(self, request, context):
    """Gets all events with matching artifact ids.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAll(self, request, context):
    """Gets a snapshot of the entire database.

    TODO(martinz): This method is a very blunt instrument. As the use cases
    evolve, let's dive into the uses of this method.

    Returns:
    A view of all artifacts, executions, types, and events in the database.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request, context):
    """TODO(martinz): This method is a very blunt instrument. As the use cases
    evolve, let's dive into the uses of this method.

    Args:
    artifact_ids: Artifact IDs to be directly searched for.
    artifact_types: Artifact types to be searched for.
    execution_ids: Artifact IDs to be directly searched for.
    execution_types: Execution types to be searched for.

    Returns:
    All artifacts of the given types are returned.
    All executions of the given types are returned.
    All artifacts with the given IDs are returned.
    All executions with the given IDs are returned.
    If a artifact type is requested or it is the type of a returned
    artifact, it is returned. If an execution type is requested or it is the
    type of a returned execution, it is returned. If an event refers to a
    returned artifact or execution, it is returned.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MakeArtifactLive(self, request, context):
    """Changes the state of each artifact to LIVE.

    The artifact state must be NEW or CREATABLE.

    Args:
    artifact_id: the ID of the artifact.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CompleteExecution(self, request, context):
    """Changes the state of an execution to COMPLETE and the artifacts to
    LIVE.

    The execution state must be NEW or RUNNING.
    The artifacts must be NEW or CREATABLE.

    Args:
    execution_id: the execution to change to COMPLETE.
    artifact_ids: the artifacts to change to LIVE.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MetadataStoreServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PutArtifacts': grpc.unary_unary_rpc_method_handler(
          servicer.PutArtifacts,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutArtifactsRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutArtifactsResponse.SerializeToString,
      ),
      'PutArtifactType': grpc.unary_unary_rpc_method_handler(
          servicer.PutArtifactType,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutArtifactTypeRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutArtifactTypeResponse.SerializeToString,
      ),
      'PutExecutions': grpc.unary_unary_rpc_method_handler(
          servicer.PutExecutions,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutExecutionsRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutExecutionsResponse.SerializeToString,
      ),
      'PutExecutionType': grpc.unary_unary_rpc_method_handler(
          servicer.PutExecutionType,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutExecutionTypeRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutExecutionTypeResponse.SerializeToString,
      ),
      'PutEvents': grpc.unary_unary_rpc_method_handler(
          servicer.PutEvents,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutEventsRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.PutEventsResponse.SerializeToString,
      ),
      'GetArtifactType': grpc.unary_unary_rpc_method_handler(
          servicer.GetArtifactType,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactTypeRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactTypeResponse.SerializeToString,
      ),
      'GetArtifactTypesByID': grpc.unary_unary_rpc_method_handler(
          servicer.GetArtifactTypesByID,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactTypesByIDRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactTypesByIDResponse.SerializeToString,
      ),
      'GetExecutionType': grpc.unary_unary_rpc_method_handler(
          servicer.GetExecutionType,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionTypeRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionTypeResponse.SerializeToString,
      ),
      'GetExecutionTypesByID': grpc.unary_unary_rpc_method_handler(
          servicer.GetExecutionTypesByID,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionTypesByIDRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionTypesByIDResponse.SerializeToString,
      ),
      'GetArtifacts': grpc.unary_unary_rpc_method_handler(
          servicer.GetArtifacts,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsResponse.SerializeToString,
      ),
      'GetExecutions': grpc.unary_unary_rpc_method_handler(
          servicer.GetExecutions,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsResponse.SerializeToString,
      ),
      'GetArtifactsByID': grpc.unary_unary_rpc_method_handler(
          servicer.GetArtifactsByID,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByIDRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByIDResponse.SerializeToString,
      ),
      'GetExecutionsByID': grpc.unary_unary_rpc_method_handler(
          servicer.GetExecutionsByID,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsByIDRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsByIDResponse.SerializeToString,
      ),
      'GetArtifactsByType': grpc.unary_unary_rpc_method_handler(
          servicer.GetArtifactsByType,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByTypeRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByTypeResponse.SerializeToString,
      ),
      'GetExecutionsByType': grpc.unary_unary_rpc_method_handler(
          servicer.GetExecutionsByType,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsByTypeRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetExecutionsByTypeResponse.SerializeToString,
      ),
      'GetArtifactsByURI': grpc.unary_unary_rpc_method_handler(
          servicer.GetArtifactsByURI,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByURIRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetArtifactsByURIResponse.SerializeToString,
      ),
      'GetEventsByExecutionIDs': grpc.unary_unary_rpc_method_handler(
          servicer.GetEventsByExecutionIDs,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetEventsByExecutionIDsRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetEventsByExecutionIDsResponse.SerializeToString,
      ),
      'GetEventsByArtifactIDs': grpc.unary_unary_rpc_method_handler(
          servicer.GetEventsByArtifactIDs,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetEventsByArtifactIDsRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetEventsByArtifactIDsResponse.SerializeToString,
      ),
      'GetAll': grpc.unary_unary_rpc_method_handler(
          servicer.GetAll,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetAllRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetAllResponse.SerializeToString,
      ),
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.GetResponse.SerializeToString,
      ),
      'MakeArtifactLive': grpc.unary_unary_rpc_method_handler(
          servicer.MakeArtifactLive,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.MakeArtifactLiveRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.MakeArtifactLiveResponse.SerializeToString,
      ),
      'CompleteExecution': grpc.unary_unary_rpc_method_handler(
          servicer.CompleteExecution,
          request_deserializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.CompleteExecutionRequest.FromString,
          response_serializer=ml__metadata_dot_proto_dot_metadata__store__service__pb2.CompleteExecutionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ml_metadata.MetadataStoreService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
